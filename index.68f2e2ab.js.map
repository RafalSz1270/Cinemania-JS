{"mappings":"AAAO,MCAMA,EAAU,CACrBC,KAAM,olDASNC,KAAM,u+BAcNC,MAAO,mmBClBHC,EAAM,CACVC,SAAU,4FACVC,OAAQ,0FA6CV,SAASC,EAAmBC,GAC1B,MAAMC,MACJA,EACAC,YAAaC,EACbC,YAAaC,EACbC,aAAcC,EACdC,aAAcC,GACZT,EAEEU,EAAeC,SAASC,cAAc,OAC5CF,EAAaG,UAAY,oBACzBH,EAAaI,MAAMC,gBAAkB,sCAAwBV,KAE7D,MAAMW,GAlCwBC,EAkCqB,GAAZd,EAjCzBe,MAAM,MAAMC,QAAO,CAACC,EAAKC,IAC9BD,EAAIE,OAASD,EAAMC,OAAS,GAAKL,EACpC,GAAGG,MAAQC,IACXD,KAJR,IAAgCH,EAmC9B,MAAMM,EAAc,IAAIC,KAAKjB,GAAakB,cACpCC,EA5BR,SAA0BjB,GACxB,MAAMkB,EAAYC,KAAKC,MAAMpB,EAAS,GAChCqB,EAAcrB,EAAS,GAAK,GAC5BsB,EAAa,EAAIJ,GAAaG,EAAc,EAAI,GAEhDE,EAAUC,GAAQzC,EAAQyC,GAChC,MAAO,SACHD,EAAQ,QAAQE,OAAOP,WACvBG,EAAcE,EAAQ,QAAU,WAChCA,EAAQ,SAASE,OAAOH,Q,CAmBTI,CAAiB1B,GAUpC,OARAC,EAAa0B,UAAY,uCACSnC,+EAECe,OAAqBO,0CACxBG,2BAIzBhB,C,CF9EsB,MAC7B,MAAM2B,EAAQ1B,SAAS2B,eAAe,WAChCC,EAAM5B,SAAS2B,eAAe,SAC9BE,EAAO7B,SAAS8B,uBAAuB,SAAS,GAChDC,EAAe/B,SAAS2B,eAAe,iBAG7CC,EAAII,QAAU,WACZN,EAAMvB,MAAM8B,QAAU,O,EAIxBJ,EAAKG,QAAU,WACbN,EAAMvB,MAAM8B,QAAU,M,EAIxBC,OAAOF,QAAU,SAAUG,GACrBA,EAAMC,QAAUV,IAClBA,EAAMvB,MAAM8B,QAAU,O,EAK1BF,EAAaC,QAAU,WACU,wBAA3BD,EAAaM,UACfN,EAAaM,UAAY,oBAEzBN,EAAaM,UAAY,qB,CAE5B,EG3BH,GDsFO,SAA0BC,EAAQ,EAAGC,EAAY,oBACtDvC,SAASwC,iBAAiB,oBAAoBC,UAC5C,IACEC,QAAQC,IAAI,sBACZ,MAAMC,QAlFLH,eAA+BH,EAAQ,GAC5C,IACE,MAAOO,EAAWC,SAAmBC,QAAQC,IAAI,CAC/CC,MAAMhE,EAAIC,UAAUgE,MAAKC,GAAOA,EAAIC,SACpCH,MAAMhE,EAAIE,QAAQ+D,MAAKC,GAAOA,EAAIC,WAG9BC,EAAWC,OAAOC,YACtBT,EAAU3D,OAAOqE,KAAI,EAACC,GAAEA,EAAEC,KAAEA,KAAW,CAACD,EAAIC,MAG9C,OAAOb,EAAUc,QAAQC,MAAM,EAAGtB,GAAOkB,KAAInE,IAAU,IAClDA,EACHE,YAAaF,EAAMwE,UAAUL,KAAIC,GAAMJ,EAASI,KAAKK,KAAK,S,CAE5D,MAAOC,GAEP,OADArB,QAAQqB,MAAM,mCAAoCA,GAC3C,E,EAiEgBC,CAAgB1B,GACrCI,QAAQC,IAAI,kBAAmBC,GAbrC,SAAuBA,EAAQL,EAAY,oBACzC,MAAM0B,EAAiBjE,SAASkE,cAAc3B,GACxC4B,EAAWnE,SAASoE,yBAC1BxB,EAAOyB,SAAQhF,GAAS8E,EAASG,YAAYlF,EAAmBC,MAChE4E,EAAexC,UAAY,GAC3BwC,EAAeK,YAAYH,E,CASvBI,CAAc3B,EAAQL,GACtBG,QAAQC,IAAI,iC,CACZ,MAAOoB,GACPrB,QAAQqB,MAAM,wBAAyBA,E,KC9F7C,CAAiB,EAAG","sources":["src/modalOpen.js","src/starIcons.js","src/home.js","src/index.js"],"sourcesContent":["export const initializeModal = () => {\n  const modal = document.getElementById('myModal');\n  const btn = document.getElementById('myBtn');\n  const span = document.getElementsByClassName('close')[0];\n  const toggleButton = document.getElementById('toggleLibrary');\n\n  // Open the modal\n  btn.onclick = function () {\n    modal.style.display = 'block';\n  };\n\n  // Close the modal\n  span.onclick = function () {\n    modal.style.display = 'none';\n  };\n\n  // Close the modal when clicking outside of it\n  window.onclick = function (event) {\n    if (event.target == modal) {\n      modal.style.display = 'none';\n    }\n  };\n\n  // Toggle add/remove from library\n  toggleButton.onclick = function () {\n    if (toggleButton.innerText === 'Dodaj do My library') {\n      toggleButton.innerText = 'Usu≈Ñ z My library';\n    } else {\n      toggleButton.innerText = 'Dodaj do My library';\n    }\n  };\n};\n","export const starSvg = {\n  full: `<svg width=\"18\" height=\"16\" viewBox=\"0 0 18 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M13.852 15.8746C13.7336 15.875 13.6181 15.8381 13.5219 15.7691L9.00048 12.4911L4.47903 15.7691C4.38243 15.8392 4.26606 15.8767 4.14673 15.8762C4.0274 15.8758 3.91129 15.8374 3.81521 15.7667C3.71912 15.6959 3.64803 15.5964 3.61221 15.4826C3.57639 15.3688 3.5777 15.2465 3.61594 15.1335L5.37938 9.9103L0.809069 6.77612C0.710073 6.70831 0.635356 6.61062 0.595836 6.49732C0.556316 6.38402 0.554063 6.26105 0.589407 6.14638C0.624751 6.0317 0.695839 5.93134 0.792285 5.85995C0.888732 5.78856 1.00548 5.74988 1.12548 5.74956H6.76384L8.4654 0.513037C8.50205 0.399982 8.57358 0.301443 8.6697 0.231555C8.76583 0.161668 8.88163 0.124023 9.00048 0.124023C9.11932 0.124023 9.23512 0.161668 9.33125 0.231555C9.42738 0.301443 9.4989 0.399982 9.53555 0.513037L11.2371 5.75132H16.8755C16.9956 5.75126 17.1126 5.78967 17.2094 5.86093C17.3061 5.93218 17.3775 6.03254 17.413 6.1473C17.4486 6.26206 17.4465 6.38519 17.407 6.49866C17.3675 6.61213 17.2928 6.70998 17.1936 6.77788L12.6216 9.9103L14.384 15.1321C14.4125 15.2166 14.4205 15.3067 14.4074 15.395C14.3942 15.4832 14.3603 15.5671 14.3083 15.6396C14.2563 15.7122 14.1879 15.7713 14.1085 15.8122C14.0292 15.853 13.9413 15.8744 13.852 15.8746Z\" fill=\"url(#paint0_linear_148_6975)\"/>\n    <defs>\n    <linearGradient id=\"paint0_linear_148_6975\" x1=\"2.62549\" y1=\"1.24957\" x2=\"13.8755\" y2=\"16.2496\" gradientUnits=\"userSpaceOnUse\">\n    <stop stop-color=\"#F84119\"/>\n    <stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n    </linearGradient>\n    </defs>\n    </svg>`,\n  half: `<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M16.875 7.3125H10.8281L9 1.6875L7.17188 7.3125H1.125L6.04688 10.6875L4.14844 16.3125L9 12.7969L13.8516 16.3125L11.9531 10.6875L16.875 7.3125Z\" stroke=\"url(#paint0_linear_148_6991)\" stroke-linejoin=\"round\"/>\n    <path d=\"M9 1.6875V12.7969L4.14844 16.3125L6.04688 10.6875L1.125 7.3125H7.17188L9 1.6875Z\" fill=\"url(#paint1_linear_148_6991)\"/>\n    <defs>\n    <linearGradient id=\"paint0_linear_148_6991\" x1=\"3.04877\" y1=\"2.73251\" x2=\"13.478\" y2=\"16.7124\" gradientUnits=\"userSpaceOnUse\">\n    <stop stop-color=\"#F84119\"/>\n    <stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n    </linearGradient>\n    <linearGradient id=\"paint1_linear_148_6991\" x1=\"2.08688\" y1=\"2.73251\" x2=\"12.1506\" y2=\"9.47748\" gradientUnits=\"userSpaceOnUse\">\n    <stop stop-color=\"#F84119\"/>\n    <stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n    </linearGradient>\n    </defs>\n    </svg>`,\n  empty: `<svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M16.875 7.3125H10.8281L9 1.6875L7.17188 7.3125H1.125L6.04688 10.6875L4.14844 16.3125L9 12.7969L13.8516 16.3125L11.9531 10.6875L16.875 7.3125Z\" stroke=\"url(#paint0_linear_148_6994)\" stroke-linejoin=\"round\"/>\n    <defs>\n    <linearGradient id=\"paint0_linear_148_6994\" x1=\"3.04877\" y1=\"2.73251\" x2=\"13.478\" y2=\"16.7124\" gradientUnits=\"userSpaceOnUse\">\n    <stop stop-color=\"#F84119\"/>\n    <stop offset=\"1\" stop-color=\"#F89F19\" stop-opacity=\"0.68\"/>\n    </linearGradient>\n    </defs>\n    </svg>`,\n};\n","import { starSvg } from './starIcons.js';\n\nconst API_KEY = '5b2561cb57ffa8e6a9098e26cf7f9cbf';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst API = {\n  trending: `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`,\n  genres: `${BASE_URL}/genre/movie/list?api_key=${API_KEY}`,\n};\n\nexport async function fetchMoviesData(count = 3) {\n  try {\n    const [movieData, genreData] = await Promise.all([\n      fetch(API.trending).then(res => res.json()),\n      fetch(API.genres).then(res => res.json()),\n    ]);\n\n    const genreMap = Object.fromEntries(\n      genreData.genres.map(({ id, name }) => [id, name])\n    );\n\n    return movieData.results.slice(0, count).map(movie => ({\n      ...movie,\n      genre_names: movie.genre_ids.map(id => genreMap[id]).join(', '),\n    }));\n  } catch (error) {\n    console.error('Error fetching movies or genres:', error);\n    return [];\n  }\n}\n\nfunction truncateGenres(genres, maxLength) {\n  return genres.split(', ').reduce((acc, genre) => {\n    return acc.length + genre.length + 2 <= maxLength\n      ? `${acc}, ${genre}`\n      : acc;\n  });\n}\n\nfunction createStarRating(rating) {\n  const fullStars = Math.floor(rating / 2);\n  const hasHalfStar = rating % 2 >= 0.5;\n  const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);\n\n  const starImg = type => starSvg[type];\n  return `\n    ${starImg('full').repeat(fullStars)}\n    ${hasHalfStar ? starImg('half') : ''}\n    ${starImg('empty').repeat(emptyStars)}\n  `;\n}\n\nfunction createMovieElement(movie) {\n  const {\n    title,\n    genre_names: genreNames,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    vote_average: rating,\n  } = movie;\n\n  const movieElement = document.createElement('div');\n  movieElement.className = 'movie-head-poster';\n  movieElement.style.backgroundImage = `url(${IMAGE_BASE_URL}${posterPath})`;\n\n  const truncatedGenres = truncateGenres(genreNames, 15);\n  const releaseYear = new Date(releaseDate).getFullYear();\n  const starRating = createStarRating(rating);\n\n  movieElement.innerHTML = `\n    <p class=\"movie-head-t-title\">${title}</p>\n    <div class=\"info-container\">\n      <p class=\"movie-head-t-info\">${truncatedGenres} | ${releaseYear}</p>\n      <span class=\"star-rating\">${starRating}</span>\n    </div>\n  `;\n\n  return movieElement;\n}\n\nfunction displayMovies(movies, htmlQuery = '#movie-container') {\n  const movieContainer = document.querySelector(htmlQuery);\n  const fragment = document.createDocumentFragment();\n  movies.forEach(movie => fragment.appendChild(createMovieElement(movie)));\n  movieContainer.innerHTML = '';\n  movieContainer.appendChild(fragment);\n}\n\nexport function initializeMovies(count = 3, htmlQuery = '#movie-container') {\n  document.addEventListener('DOMContentLoaded', async () => {\n    try {\n      console.log('Fetching movies...');\n      const movies = await fetchMoviesData(count);\n      console.log('Movies fetched:', movies);\n      displayMovies(movies, htmlQuery);\n      console.log('Movies should be displayed now');\n    } catch (error) {\n      console.error('Failed to initialize:', error);\n    }\n  });\n}\n","import { initializeModal } from './modalOpen.js';\nimport { initializeMovies } from './home.js';\n\ninitializeModal();\ninitializeMovies(3, '#movie-container');\n// initializeMovies(9, '.test');\n"],"names":["$76139fa6fc511dfb$export$94b6071d65117838","full","half","empty","$e6377a399e760a0d$var$API","trending","genres","$e6377a399e760a0d$var$createMovieElement","movie","title","genre_names","genreNames","poster_path","posterPath","release_date","releaseDate","vote_average","rating","movieElement","document","createElement","className","style","backgroundImage","truncatedGenres","maxLength","split","reduce","acc","genre","length","releaseYear","Date","getFullYear","starRating","fullStars","Math","floor","hasHalfStar","emptyStars","starImg","type","repeat","$e6377a399e760a0d$var$createStarRating","innerHTML","modal","getElementById","btn","span","getElementsByClassName","toggleButton","onclick","display","window","event","target","innerText","count","htmlQuery","addEventListener","async","console","log","movies","movieData","genreData","Promise","all","fetch","then","res","json","genreMap","Object","fromEntries","map","id","name","results","slice","genre_ids","join","error","$e6377a399e760a0d$export$9225d2b0b7431532","movieContainer","querySelector","fragment","createDocumentFragment","forEach","appendChild","$e6377a399e760a0d$var$displayMovies"],"version":3,"file":"index.68f2e2ab.js.map"}